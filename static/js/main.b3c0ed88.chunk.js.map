{"version":3,"sources":["components/App/App.module.css","components/Button/Button.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Button/Button.jsx","components/Feedbacks/Feedbacks.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Btn","btnName","onLeaveFb","className","s","button","onClick","type","Feedbacks","options","map","option","Statistics","good","neutral","bad","total","positivePercentage","statisticsTitle","Notification","message","App","useState","setGood","setNeutral","setBad","countPositiveFeedbackPercentage","Math","round","container","title","prevGood","prevNeutral","prevBad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,iBCA7DD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,gBAAkB,sC,gBCApCD,EAAOC,QAAU,CAAC,QAAU,gC,6HCoBbC,EAjBH,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACtB,OACE,wBACEC,UAAWC,IAAEC,OACbC,QAAS,kBAAMJ,EAAUD,IACzBM,KAAK,SAHP,SAKGN,KCMQO,MAbf,YAA4C,IAAvBC,EAAsB,EAAtBA,QAASP,EAAa,EAAbA,UAC5B,OAAOO,EAAQC,KAAI,SAAAC,GAAM,OACvB,cAAC,EAAD,CAAkBV,QAASU,EAAQT,UAAW,kBAAMA,EAAUS,IAA9D,SACGA,GADOA,O,gBCqBCC,EAvBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAId,UAAWC,IAAEc,gBAAjB,wBACA,+BACE,uCAAUL,KACV,0CAAaC,KACb,sCAASC,KACT,yCAAYC,KACZ,sDAAyBC,EAAzB,c,gBCDOE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGjB,UAAWC,IAAEgB,QAAhB,SAA0BA,K,gBCCpB,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAEMT,EAAQH,EAAOC,EAAUC,EAEzBW,EAAkCC,KAAKC,MAAOf,EAAOG,EAAS,KAcpE,OACE,sBAAKb,UAAWC,IAAEyB,UAAlB,UACE,oBAAI1B,UAAWC,IAAE0B,MAAjB,0CACA,cAAC,EAAD,CACErB,QAAS,CAAC,OAAQ,UAAW,OAC7BP,UAjBiB,SAAAD,GACL,SAAZA,GACFsB,GAAQ,SAAAQ,GAAQ,OAAIA,EAAW,KAEjB,YAAZ9B,GACFuB,GAAW,SAAAQ,GAAW,OAAIA,EAAc,KAE1B,QAAZ/B,GACFwB,GAAO,SAAAQ,GAAO,OAAIA,EAAU,QAW3BjB,EAAQ,GACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBS,KAGtBV,EAAQ,GAAK,cAAC,EAAD,CAAcI,QAAQ,4B,MCtC3Cc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,W","file":"static/js/main.b3c0ed88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2U1T5\",\"title\":\"App_title__2c-ef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2oUmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsTitle\":\"Statistics_statisticsTitle__wOQCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2tb_c\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Btn = ({ btnName, onLeaveFb }) => {\r\n  return (\r\n    <button\r\n      className={s.button}\r\n      onClick={() => onLeaveFb(btnName)}\r\n      type=\"button\"\r\n    >\r\n      {btnName}\r\n    </button>\r\n  );\r\n};\r\n\r\nBtn.propTypes = {\r\n  btnName: PropTypes.string.isRequired,\r\n  onLeaveFb: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Btn;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Btn from '../Button/Button';\r\n\r\nfunction Feedbacks({ options, onLeaveFb }) {\r\n  return options.map(option => (\r\n    <Btn key={option} btnName={option} onLeaveFb={() => onLeaveFb(option)}>\r\n      {option}\r\n    </Btn>\r\n  ));\r\n}\r\n\r\nFeedbacks.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFb: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Feedbacks;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <h2 className={s.statisticsTitle}>Statistics</h2>\r\n      <ul>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedbacks: {positivePercentage}%</li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={s.message}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState } from 'react';\r\nimport Feedbacks from '../Feedbacks';\r\nimport Statistics from '../Statistics';\r\nimport Notification from '../Notification';\r\nimport s from './App.module.css';\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const total = good + neutral + bad;\r\n\r\n  const countPositiveFeedbackPercentage = Math.round((good / total) * 100);\r\n\r\n  const handleClickBtn = btnName => {\r\n    if (btnName === 'good') {\r\n      setGood(prevGood => prevGood + 1);\r\n    }\r\n    if (btnName === 'neutral') {\r\n      setNeutral(prevNeutral => prevNeutral + 1);\r\n    }\r\n    if (btnName === 'bad') {\r\n      setBad(prevBad => prevBad + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <h1 className={s.title}>Please, leave yours feedback</h1>\r\n      <Feedbacks\r\n        options={['good', 'neutral', 'bad']}\r\n        onLeaveFb={handleClickBtn}\r\n      />\r\n      {total > 0 && (\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={total}\r\n          positivePercentage={countPositiveFeedbackPercentage}\r\n        />\r\n      )}\r\n      {!total > 0 && <Notification message=\"There is no feedback\" />}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}